// Generated by CoffeeScript 1.3.3
(function() {
  var auth_user, create_circle, create_comment, create_feed, create_user, feed_events, find_user, media_uploader, preview_media, preview_media_api, switch_circle, update_circle, update_user;

  create_comment = function(e) {
    var obj;
    obj = {};
    obj["message"] = e.target.value;
    obj["id"] = e.target.getAttribute("data-id");
    $.post("/api/comments/" + obj["id"], obj, function(res, status) {
      var $target, commentdata, html, template;
      if (res.head.success) {
        commentdata = [];
        commentdata.push(res.data);
        template = Handlebars.compile($("#feedComments-tmpl").html());
        html = $.trim(template({
          "comments": commentdata
        }));
        $target = $(e.target).parent().parent().parent();
        $(html).insertBefore($target);
        return $(e.target).val('');
      }
    }).fail(function() {
      return $(".comment_overlay_container").fadeOut("fast");
    });
    return false;
  };

  create_user = function() {
    var obj;
    obj = {};
    obj["username"] = $("#create_account #form_username").val();
    obj["password"] = $("#create_account #form_password").val();
    obj["fullname"] = $("#create_account #form_fullname").val();
    obj["email"] = $("#create_account #form_email").val();
    obj["media_data"] = JSON.parse($("#create_account #form_media_url").attr("data-media"));
    obj["media_url"] = $("#create_account #form_media_url").val();
    obj["mobile"] = $("#create_account #form_mobile").val();
    obj["resources"] = $("#create_account #form_resources").attr("data-resources");
    obj["skills"] = $("#create_account #form_skills").attr("data-skills");
    $(".alert").slideUp("fast", function() {
      return $(this).empty();
    });
    $.post("/api/users", obj, function(res, status) {
      if (res.head.success) {
        $(".alert-success").fadeIn("fast");
        return $(".alert-success").animate({
          height: "40px"
        }, 500, function() {
          return $(this).append("<p>Great! Your have successfully created an account</p>");
        });
      }
    }).fail(function(xhr) {
      var res;
      res = JSON.parse(xhr.responseText);
      console.log(res.head.description);
      $(".alert-error").fadeIn("fast");
      return $(".alert-error").animate({
        height: "40px"
      }, 500, function() {
        return $(this).append("<p>Ooops! You didn't fill out all the required fields.</p>");
      });
    });
    return false;
  };

  update_user = function() {
    var id, obj;
    obj = {};
    obj["username"] = $("#form_settings #form_username").val();
    obj["fullname"] = $("#form_settings #form_fullname").val();
    obj["email"] = $("#form_settings #form_email").val();
    obj["media_url"] = $("#form_settings #form_media_url").val();
    obj["mobile"] = $("#form_settings #form_mobile").val();
    obj["resources"] = $("#form_settings #form_resources").attr("data-resources");
    obj["skills"] = $("#form_settings #form_skills").attr("data-skills");
    id = $("#form_settings #form_id").val();
    $(".alert").slideUp("fast", function() {
      return $(this).empty();
    });
    $.post("/api/users/" + id, obj, function(res, status) {
      if (res.head.success) {
        $(".alert-success").fadeIn("fast");
        return $(".alert-success").animate({
          height: "40px"
        }, 500, function() {
          return $(this).append("<p>Great! Your settings have been updated successfully</p>");
        });
      }
    }).fail(function(xhr) {
      var res;
      res = JSON.parse(xhr.responseText);
      console.log(res.head.description);
      $(".alert-error").fadeIn("fast");
      return $(".alert-error").animate({
        height: "40px"
      }, 500, function() {
        return $(this).append("<p>Ooops! User settings were not updated.</p>");
      });
    });
    return false;
  };

  create_circle = function() {
    var obj;
    obj = {};
    obj["name"] = $("#create_circle #form_name").val();
    obj["desc"] = $("#create_circle #form_desc").val();
    obj["invitees"] = $("#create_circle #form_invitees").val();
    obj["media_url"] = $("#create_circle #form_media_url").val();
    $(".alert").slideUp("fast", function() {
      return $(this).empty();
    });
    $.post("/api/circles", obj, function(res, status) {
      if (res.head.success) {
        $(".alert-success").fadeIn("fast");
        return $(".alert-success").animate({
          height: "40px"
        }, 500, function() {
          return $(this).append("<p>Great! Your have successfully created an account</p>");
        });
      }
    }).fail(function(xhr) {
      var res;
      res = JSON.parse(xhr.responseText);
      console.log(res.head.description);
      $(".alert-error").fadeIn("fast");
      return $(".alert-error").animate({
        height: "40px"
      }, 500, function() {
        return $(this).append("<p>Ooops! You didn't fill out all the required fields.</p>");
      });
    });
    return false;
  };

  update_circle = function() {
    var id, obj;
    obj = {};
    obj["name"] = $("#form_edit_circle #form_name").val();
    obj["desc"] = $("#form_edit_circle #form_desc").val();
    obj["invitees"] = $("#form_edit_circle #form_invitees").val();
    obj["media_url"] = $("#form_edit_circle #form_media_url").val();
    id = $("#form_edit_circle #form_id").val();
    $(".alert").slideUp("fast", function() {
      return $(this).empty();
    });
    $.post("/api/circles/" + id, obj, function(res, status) {
      if (res.head.success) {
        $(".alert-success").fadeIn("fast");
        return $(".alert-success").animate({
          height: "40px"
        }, 500, function() {
          return $(this).append("<p>Great! Your have successfully updated your circle</p>");
        });
      }
    }).fail(function(xhr) {
      var res;
      res = JSON.parse(xhr.responseText);
      console.log(res.head.description);
      $(".alert-error").fadeIn("fast");
      return $(".alert-error").animate({
        height: "40px"
      }, 500, function() {
        return $(this).append("<p>Ooops! You didn't fill out all the required fields.</p>");
      });
    });
    return false;
  };

  switch_circle = function() {
    var id;
    id = $(this).attr("data-id");
    $(".feeds-container #form_circle_id").val("" + id);
    $(".create-feed").addClass("ajax-small");
    $(".feeds").fadeOut("slow", function() {});
    $(".circle_container").slideUp("fast", function() {});
    $.get("/api/feeds/" + id, function(res, status) {
      var html, template;
      if (res.head.success) {
        $(".circle_container").empty();
        template = Handlebars.compile($("#circle-tmpl").html());
        html = $.trim(template({
          "circle": res.data
        }));
        $(".circle_container").append(html);
        $(".circle_container").slideDown("fast");
        Handlebars.registerHelper("media", function(media) {
          var p, url;
          if (media) {
            url = media.object.video_link;
            $(".post_preview_image").empty();
            if (media.object.type === "image") {
              return new Handlebars.SafeString($('<div class="feed-image image">').append("<img src='" + media.object.image_sizes.cropped + "' />").html());
            } else {
              switch (media.object.site_name) {
                case "SoundCloud":
                  return new Handlebars.SafeString($('<div class="feed-image image">').append($("<iframe />", {
                    src: url + "&auto_play=false&show_comments=false&buying=false&sharing=false&show_playcount=false$download=false&liking=false",
                    width: "100%",
                    height: "170px",
                    frameborder: "0"
                  }).clone()).html());
                case "YouTube":
                  return new Handlebars.SafeString($('<div class="feed-image image">').append($("<iframe />", {
                    src: url,
                    title: 'title here',
                    width: "100%",
                    height: "260px",
                    frameborder: "0",
                    type: "text/html",
                    "class": "youTubePreview",
                    id: "youTubePreview",
                    webkitAllowFullScreen: "true",
                    mozallowfullscreen: "true",
                    allowFullScreen: "true"
                  }).clone()).html());
                case "Vimeo":
                  return new Handlebars.SafeString($('<div class="feed-image image">').append($("<iframe />", {
                    src: url,
                    title: 'title here',
                    width: "100%",
                    height: "260px",
                    frameborder: "0",
                    type: "text/html",
                    webkitAllowFullScreen: "true",
                    mozallowfullscreen: "true",
                    allowFullScreen: "true"
                  }).clone()).html());
                case "local_video":
                  p = [];
                  p.push("<video controls width=100% height=290px>");
                  p.push("<source src=" + url + " type=video/mp4>");
                  p.push("</video>");
                  return new Handlebars.SafeString(p.join(""));
              }
            }
          }
        });
        template = Handlebars.compile($("#feedTL-tmpl").html());
        html = $.trim(template({
          "feeds": res.data.feeds.data
        }));
        $(".feeds").empty();
        $(".create-feed").removeClass("ajax-small");
        $(".feeds").append(html);
        $(".feeds").fadeIn("fast");
        return feed_events();
      }
    }).fail(function(xhr) {
      return $(".feeds").fadeOut("slow", function() {
        $(".feeds").empty().append("<div class='feed no-feed'><p>No feeds yet!</p></div>");
        return $(".feeds").fadeIn("fast");
      });
    });
    return false;
  };

  create_feed = function() {
    var circle_id, obj;
    obj = {};
    obj["discussion"] = $(".create-feed #form_discussion").val();
    obj["media_data"] = JSON.parse($(".create-feed #form_media_url").attr("data-media"));
    obj["circle_id"] = circle_id = $(".feeds-container #form_circle_id").val();
    $(".media_film_strip").slideUp("slow", function() {
      $(".media_upload_preview").empty();
      return $("#form_discussion").val('');
    });
    $.post("/api/feeds", obj, function(res, status) {
      if (res.head.success) {
        return $.get("/api/feeds/" + circle_id, function(res, status) {
          var html, template;
          template = Handlebars.compile($("#feedTL-tmpl").html());
          html = $.trim(template({
            "feeds": res.data.feeds.data
          }));
          $(".feeds").prepend(html);
          $(".feeds").fadeIn("slow");
          return feed_events();
        });
      }
    }).fail(function(xhr) {
      return console.log(xhr);
    });
    return false;
  };

  feed_events = function() {
    return $(".create-comment #form_feed_comment").keyup(function(e) {
      if (e.keyCode === 13) {
        return create_comment(e);
      }
    });
  };

  find_user = function() {
    var obj;
    obj = {};
    obj["q"] = $("#create_circle #form_q").val();
    $.get("/api/users/search", obj, function(res, status) {
      if (res.head.success) {
        return console.log("success");
      }
    }).fail(function(xhr) {});
    return false;
  };

  auth_user = function() {
    var obj;
    obj = {};
    obj["username"] = $("#login_user #form_username").val();
    obj["password"] = $("#login_user #form_password").val();
    $.post("/api/users/auth", obj, function(res, status) {
      if (res.head.success) {
        return window.location.href = '/feed';
      }
    }).fail(function(xhr) {
      var res;
      res = JSON.parse(xhr.responseText);
      return console.log(res.head.description);
    });
    return false;
  };

  media_uploader = function() {
    var upload_photo;
    upload_photo = $('#upload_btn');
    return new AjaxUpload(upload_photo, {
      action: '/api/images',
      name: 'myfile',
      data: {
        'image': 'upload'
      },
      multiple: false,
      onSubmit: function(file, ext) {
        $("#form_url").slideUp("fast");
        $(".media_film_strip").slideDown();
        $("#media_upload_preview").addClass("ajax");
        return this.disable();
      },
      onError: function(file, response) {
        return alert("ERROR!");
      },
      onComplete: function(file, response) {
        window.clearInterval(this.interval);
        this.enable();
        if (response === "Error") {
          $("#media_upload_preview img, #media_upload_preview p").remove();
          return $("#media_upload_preview").append("<p>The image you tried to upload is too large to be processed. Please reduce its size or choose another</p>");
        } else {
          return preview_media_api(response);
        }
      }
    });
  };

  preview_media = function(e) {
    $(".media_film_strip").slideDown();
    $("#media_upload_preview").addClass("ajax");
    return setTimeout(function() {
      var url;
      url = e.target.value;
      return preview_media_api(url);
    }, 200);
  };

  preview_media_api = function(url) {
    var obj;
    obj = {};
    obj["url"] = url;
    return $.post("/api/media", obj, function(res, status) {
      var p;
      $("#media_upload_preview").removeClass("ajax");
      if (res.data.preview.error !== void 0) {
        return $("#media_upload_preview").empty().append("<h3>" + res.data.preview.error + "</h3>");
      } else {
        $("#form_type").val(res.data.preview.type);
        switch (res.data.preview.type) {
          case "image":
            $("#form_media_url").val(res.data.preview.image_src);
            $("#form_media_url").attr("data-media", JSON.stringify(res.data.preview));
            $("#media_upload_preview").empty().append("<img src='" + res.data.preview.image_src + "' />");
            break;
          default:
            p = [];
            p.push("<h3><a href='" + res.data.preview.url + "' target='_blank'>");
            p.push(res.data.preview.title);
            p.push("</a></h3>");
            p.push("<p>");
            p.push(res.data.preview.description);
            p.push("</p>");
            p.push("<img src='" + res.data.preview.image_src + "' />");
            $("#form_media_url").val(res.data.preview.url);
            $("#form_media_url").attr("data-media", JSON.stringify(res.data.preview));
            $("#media_upload_preview").empty().append(p.join(""));
        }
        return $("#media_upload_preview h3").animate({
          top: "0px"
        }, 300, function() {});
      }
    });
  };

  $(function() {
    $(".switch_circle").on("click", switch_circle);
    $(".circle-tooltop").popover();
    $("#action_signup").on("click", create_user);
    $("#action_update_settings").on("click", update_user);
    $("#action_create_circle").on("click", create_circle);
    $("#action_update_circle").on("click", update_circle);
    $(".create-feed #form_discussion").keyup(function(e) {
      if (e.keyCode === 13) {
        return create_feed();
      }
    });
    $("#action_submit_feed").on("click", create_feed);
    if ($('#upload_btn').length > 0) {
      media_uploader();
    }
    $("#form_discussion").on("paste", preview_media);
    return $("#action_signin").on("click", auth_user);
  });

}).call(this);
